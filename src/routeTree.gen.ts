/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as RoomRoomCodeRouteImport } from './routes/room.$roomCode'
import { Route as AuthRegisterRouteImport } from './routes/_auth/register'
import { Route as AuthLoginRouteImport } from './routes/_auth/login'
import { Route as AuthForgotPasswordRouteImport } from './routes/_auth/forgot-password'
import { Route as RoomRoomCodeGameOverRouteImport } from './routes/room.$roomCode.game-over'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const RoomRoomCodeRoute = RoomRoomCodeRouteImport.update({
  id: '/room/$roomCode',
  path: '/room/$roomCode',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRegisterRoute = AuthRegisterRouteImport.update({
  id: '/_auth/register',
  path: '/register',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/_auth/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthForgotPasswordRoute = AuthForgotPasswordRouteImport.update({
  id: '/_auth/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => rootRouteImport,
} as any)
const RoomRoomCodeGameOverRoute = RoomRoomCodeGameOverRouteImport.update({
  id: '/game-over',
  path: '/game-over',
  getParentRoute: () => RoomRoomCodeRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/forgot-password': typeof AuthForgotPasswordRoute
  '/login': typeof AuthLoginRoute
  '/register': typeof AuthRegisterRoute
  '/room/$roomCode': typeof RoomRoomCodeRouteWithChildren
  '/room/$roomCode/game-over': typeof RoomRoomCodeGameOverRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/forgot-password': typeof AuthForgotPasswordRoute
  '/login': typeof AuthLoginRoute
  '/register': typeof AuthRegisterRoute
  '/room/$roomCode': typeof RoomRoomCodeRouteWithChildren
  '/room/$roomCode/game-over': typeof RoomRoomCodeGameOverRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_auth/forgot-password': typeof AuthForgotPasswordRoute
  '/_auth/login': typeof AuthLoginRoute
  '/_auth/register': typeof AuthRegisterRoute
  '/room/$roomCode': typeof RoomRoomCodeRouteWithChildren
  '/room/$roomCode/game-over': typeof RoomRoomCodeGameOverRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/forgot-password'
    | '/login'
    | '/register'
    | '/room/$roomCode'
    | '/room/$roomCode/game-over'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/forgot-password'
    | '/login'
    | '/register'
    | '/room/$roomCode'
    | '/room/$roomCode/game-over'
  id:
    | '__root__'
    | '/'
    | '/_auth/forgot-password'
    | '/_auth/login'
    | '/_auth/register'
    | '/room/$roomCode'
    | '/room/$roomCode/game-over'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthForgotPasswordRoute: typeof AuthForgotPasswordRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
  RoomRoomCodeRoute: typeof RoomRoomCodeRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/room/$roomCode': {
      id: '/room/$roomCode'
      path: '/room/$roomCode'
      fullPath: '/room/$roomCode'
      preLoaderRoute: typeof RoomRoomCodeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/register': {
      id: '/_auth/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof AuthRegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/forgot-password': {
      id: '/_auth/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/room/$roomCode/game-over': {
      id: '/room/$roomCode/game-over'
      path: '/game-over'
      fullPath: '/room/$roomCode/game-over'
      preLoaderRoute: typeof RoomRoomCodeGameOverRouteImport
      parentRoute: typeof RoomRoomCodeRoute
    }
  }
}

interface RoomRoomCodeRouteChildren {
  RoomRoomCodeGameOverRoute: typeof RoomRoomCodeGameOverRoute
}

const RoomRoomCodeRouteChildren: RoomRoomCodeRouteChildren = {
  RoomRoomCodeGameOverRoute: RoomRoomCodeGameOverRoute,
}

const RoomRoomCodeRouteWithChildren = RoomRoomCodeRoute._addFileChildren(
  RoomRoomCodeRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthForgotPasswordRoute: AuthForgotPasswordRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthRegisterRoute: AuthRegisterRoute,
  RoomRoomCodeRoute: RoomRoomCodeRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
